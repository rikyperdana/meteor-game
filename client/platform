platforms = null
player = null
stars = null
score = 0
scoreText = null
baddies = null

preload = ->
	game.load.image 'sky', 'platform/sky.png'
	game.load.image 'ground', 'platform/platform.png'
	game.load.image 'star', 'platform/star.png'
	game.load.spritesheet 'dude', 'platform/dude.png', 32, 48
	game.load.spritesheet 'baddie', 'platform/baddie.png', 32, 32

create = ->
	game.physics.startSystem Phaser.Physics.ARCADE
	game.add.sprite 0, 0, 'sky'

	platforms = game.add.group()
	platforms.enableBody = true

	ground = platforms.create 0, game.world.height - 64, 'ground'
	ground.scale.setTo 2, 2
	ground.body.immovable = true

	ledge = platforms.create 400, 400, 'ground'
	ledge.body.immovable = true
	ledge = platforms.create -150, 250, 'ground'
	ledge.body.immovable = true

	player = game.add.sprite 32, game.world.height - 150, 'dude'
	game.physics.arcade.enable player
	player.body.bounce.y = 0.2
	player.body.gravity.y = 400
	player.body.collideWorldBounds = true

	player.animations.add 'left', [0..3], 10, true
	player.animations.add 'right', [5..8], 10, true

	stars = game.add.group()
	stars.enableBody = true
	for i in [0..12]
		star = stars.create i * 70, 0, 'star'
		star.body.gravity.y = 6
		star.body.bounce.y = 0.7 + Math.random() * 0.2

	scoreText = game.add.text 16, 16, 'score: 0',
		fontSize: '32px', fill: '#000'

	baddies = game.add.group()
	baddies.enableBody = true
	for i in [0..6]
		baddie = baddies.create i * 140, 0, 'baddie'
		baddie.body.gravity.y = 150
		baddie.body.bounce.y = 0.7

update = ->
	hitPlatform = game.physics.arcade.collide player, platforms
	baddiesPlatform = game.physics.arcade.collide baddies, platforms

	cursors = game.input.keyboard.createCursorKeys()

	player.body.velocity.x = 0
	if cursors.left.isDown
		player.body.velocity.x = -150
		player.animations.play 'left'
	else if cursors.right.isDown
		player.body.velocity.x = 150
		player.animations.play 'right'
	else
		player.animations.stop()
		player.frame = 4

	if cursors.up.isDown and player.body.touching.down and hitPlatform
		player.body.velocity.y = -350

	game.physics.arcade.collide stars, platforms
	game.physics.arcade.overlap player, stars, collectStar, null, this
	game.physics.arcade.overlap player, baddies, hitPlayer, null, this

collectStar = (player, star) ->
	star.kill()
	score += 10
	scoreText.text = 'Score: ' + score

hitPlayer = (player, baddies) ->
	player.kill()

render = ->

@game = new Phaser.Game 800, 600, Phaser.AUTO, 'container',
	preload: preload, create: create, update: update, render: render
